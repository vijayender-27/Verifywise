import {
  Column,
  DataType,
  ForeignKey,
  Model,
  Table,
} from "sequelize-typescript";
import { QuestionStructEUModel } from "./questionStructEU.model";
import { AssessmentEUModel } from "./assessmentEU.model";
import { StatusAnswers, STATUSES_ANSWERS } from "../../../types/status.type";

export type AnswerEU = {
  id?: number; // auto generated by database
  question_id: number; // gets assigned from the structure
  answer?: string; // won't get any values, will be filled by user
  created_at?: Date;
  assessment_id: number;
  dropdown_options?: any[]; // gets assigned from the structure
  evidence_files?: Object[]; // gets assigned from the structure
  status?: StatusAnswers;
};

@Table({
  tableName: "answers_eu",
})
export class AnswerEUModel extends Model<AnswerEU> {
  @Column({
    type: DataType.INTEGER,
    autoIncrement: true,
    primaryKey: true,
  })
  id?: number;

  @ForeignKey(() => QuestionStructEUModel)
  @Column({
    type: DataType.INTEGER,
  })
  question_id!: number;

  @Column({
    type: DataType.STRING,
  })
  answer?: string;

  @ForeignKey(() => AssessmentEUModel)
  @Column({
    type: DataType.INTEGER,
  })
  assessment_id!: number;

  @Column({
    type: DataType.ARRAY(DataType.STRING),
  })
  dropdown_options?: any[];

  @Column({
    type: DataType.JSONB,
  })
  evidence_files?: {
    id: string;
    fileName: string;
    project_id: number;
    uploaded_by: number;
    uploaded_time: Date;
  }[];

  @Column({
    type: DataType.ENUM(...STATUSES_ANSWERS),
  })
  status?: StatusAnswers;

  @Column({
    type: DataType.DATE,
  })
  created_at?: Date;
}
